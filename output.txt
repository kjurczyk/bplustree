file_name is e1.txt
Initialize(3)
New 3-way tree was initialized
Insert(21, 0.3534)
INSERT
DETERMINE-LEAF-NODE
determine leaf node, key: 21
need to insert a new node here: 
insert here is blank right now
PRINT-TREE
root is blank right now
INITIALIZE-NODE
just initialized a node as a root node
after adding the key and sorting: [21 ]
Insert(108, 31.907)
INSERT
DETERMINE-LEAF-NODE
determine leaf node, key: 108
seeker: [21 ]
keys of seeker1
found the leaf node and returning it
need to insert a new node here: 
insert here: [21 ]
PRINT-TREE
root: [21 ]
after adding the key and sorting: [21 108 ]
Insert(56089, 3.26)
INSERT
DETERMINE-LEAF-NODE
determine leaf node, key: 56089
seeker: [21 108 ]
keys of seeker2
found the leaf node and returning it
need to insert a new node here: 
insert here: [21 108 ]
PRINT-TREE
root: [21 108 ]
after adding the key and sorting: [21 108 56089 ]
NumKeys > maxKeys
INITIALIZE-NODE
maxkids: 3
smallLeafKeys: 1
LargeLeafKeys: 2
0
large leaf keys[0] is 108
1
large leaf keys[1] is 56089
large: [108 56089 ]
STEP-AFTER-SPLIT
original: [21 ]
largenode: [108 56089 ]
INITIALIZE-NODE
new Root created: [108 ]
Insert(234, 121.56)
INSERT
DETERMINE-LEAF-NODE
determine leaf node, key: 234
seeker: [108 ]
keys of seeker1
seeking which child to travel down
DETERMINE-WHICH-CHILD-TO-TRAVEL-DOWN
parent: [108 ]
i: 0
Returning the child at 1
parent has 2 kids
child : [21 ]
child : [108 56089 ]
cchild at 2 is blank right now
current seeker: [108 56089 ]
seeker->isLeaf 1
determined which child to travel down
found the leaf node and returning it
need to insert a new node here: 
insert here: [108 56089 ]
PRINT-TREE
root: [108 ]
root has 2 kids
child : [21 ]
child : [108 56089 ]
no kids to print
no kids to print
after adding the key and sorting: [108 234 56089 ]
NumKeys > maxKeys
INITIALIZE-NODE
maxkids: 3
smallLeafKeys: 1
LargeLeafKeys: 2
0
large leaf keys[0] is 234
1
large leaf keys[1] is 56089
large: [234 56089 ]
STEP-AFTER-SPLIT
original: [108 ]
largenode: [234 56089 ]
FIND-PARENT
DETERMINE-WHICH-CHILD-TO-TRAVEL-DOWN
parent: [108 ]
i: 0
Returning the child at 1
parent has 2 kids
child : [21 ]
child : [108 ]
cchild at 2 is blank right now
traveller was found to be: [108 ]
returning seeker
newNode from stepAfterSplit: [108 234 ]
Insert(4325, -109.23)
INSERT
DETERMINE-LEAF-NODE
determine leaf node, key: 4325
seeker: [108 234 ]
keys of seeker2
seeking which child to travel down
DETERMINE-WHICH-CHILD-TO-TRAVEL-DOWN
parent: [108 234 ]
i: 0
i: 1
Returning the child at 2
parent has 3 kids
child : [21 ]
child : [108 ]
child : [234 56089 ]
cchild at 2: [234 56089 ]
current seeker: [234 56089 ]
seeker->isLeaf 1
determined which child to travel down
found the leaf node and returning it
need to insert a new node here: 
insert here: [234 56089 ]
PRINT-TREE
root: [108 234 ]
root has 3 kids
child : [21 ]
child : [108 ]
child : [234 56089 ]
no kids to print
no kids to print
after adding the key and sorting: [234 4325 56089 ]
NumKeys > maxKeys
INITIALIZE-NODE
maxkids: 3
smallLeafKeys: 1
LargeLeafKeys: 2
0
large leaf keys[0] is 4325
1
large leaf keys[1] is 56089
large: [4325 56089 ]
STEP-AFTER-SPLIT
original: [234 ]
largenode: [4325 56089 ]
FIND-PARENT
DETERMINE-WHICH-CHILD-TO-TRAVEL-DOWN
parent: [108 234 ]
i: 0
i: 1
Returning the child at 2
parent has 3 kids
child : [21 ]
child : [108 ]
child : [234 ]
cchild at 2: [234 ]
traveller was found to be: [234 ]
returning seeker
too many keys... now updating parent
UPDATE-PARENT
INITIALIZE-NODE
smallToReceive 1
largeToReceive 2
toBeUpdated: [108 234 4325 ]
i: 0
largeIndex currently: [4325 ]
updateParent - largeIndex after for loop: [4325 ]
number being appended is 234STEP-AFTER-SPLIT
original: [108 ]
largenode: [4325 ]
INITIALIZE-NODE
new Root created: [234 ]
updatedParent looks like this: [108 ]
Delete (108)
key: 108
Search(234)
key: 234
Insert(102, 39.56)
INSERT
DETERMINE-LEAF-NODE
determine leaf node, key: 102
seeker: [234 ]
keys of seeker1
seeking which child to travel down
DETERMINE-WHICH-CHILD-TO-TRAVEL-DOWN
parent: [234 ]
i: 0
returning the child at 0
current seeker: [108 ]
seeker->isLeaf 0
determined which child to travel down
seeking which child to travel down
DETERMINE-WHICH-CHILD-TO-TRAVEL-DOWN
parent: [108 ]
i: 0
returning the child at 0
current seeker: [21 ]
seeker->isLeaf 1
determined which child to travel down
found the leaf node and returning it
need to insert a new node here: 
insert here: [21 ]
PRINT-TREE
root: [234 ]
root has 2 kids
child : [108 ]
child : [4325 ]
child at 0 has 2 kids
child : [21 ]
child : [108 ]
child at 1 has 2 kids
child : [234 ]
child : [4325 56089 ]
child at 3 is blank right now
after adding the key and sorting: [21 102 ]
Insert(65, -3.95)
INSERT
DETERMINE-LEAF-NODE
determine leaf node, key: 65
seeker: [234 ]
keys of seeker1
seeking which child to travel down
DETERMINE-WHICH-CHILD-TO-TRAVEL-DOWN
parent: [234 ]
i: 0
returning the child at 0
current seeker: [108 ]
seeker->isLeaf 0
determined which child to travel down
seeking which child to travel down
DETERMINE-WHICH-CHILD-TO-TRAVEL-DOWN
parent: [108 ]
i: 0
returning the child at 0
current seeker: [21 102 ]
seeker->isLeaf 1
determined which child to travel down
found the leaf node and returning it
need to insert a new node here: 
insert here: [21 102 ]
PRINT-TREE
root: [234 ]
root has 2 kids
child : [108 ]
child : [4325 ]
child at 0 has 2 kids
child : [21 102 ]
child : [108 ]
child at 1 has 2 kids
child : [234 ]
child : [4325 56089 ]
child at 3 is blank right now
after adding the key and sorting: [21 65 102 ]
NumKeys > maxKeys
INITIALIZE-NODE
maxkids: 3
smallLeafKeys: 1
LargeLeafKeys: 2
0
large leaf keys[0] is 65
1
large leaf keys[1] is 102
large: [65 102 ]
STEP-AFTER-SPLIT
original: [21 ]
largenode: [65 102 ]
FIND-PARENT
DETERMINE-WHICH-CHILD-TO-TRAVEL-DOWN
parent: [234 ]
i: 0
returning the child at 0
traveller was found to be: [108 ]
need to find a new traveller
DETERMINE-WHICH-CHILD-TO-TRAVEL-DOWN
parent: [108 ]
i: 0
returning the child at 0
traveller was found to be: [21 ]
returning seeker
newNode from stepAfterSplit: [65 108 ]
Delete (102)
key: 102
Delete (21)
key: 21
Insert(106, -3.91)
INSERT
DETERMINE-LEAF-NODE
determine leaf node, key: 106
seeker: [234 ]
keys of seeker1
seeking which child to travel down
DETERMINE-WHICH-CHILD-TO-TRAVEL-DOWN
parent: [234 ]
i: 0
returning the child at 0
current seeker: [65 108 ]
seeker->isLeaf 0
determined which child to travel down
seeking which child to travel down
DETERMINE-WHICH-CHILD-TO-TRAVEL-DOWN
parent: [65 108 ]
i: 0
i: 1
returning the child at 1
current seeker: [65 102 ]
seeker->isLeaf 1
determined which child to travel down
found the leaf node and returning it
need to insert a new node here: 
insert here: [65 102 ]
PRINT-TREE
root: [234 ]
root has 2 kids
child : [65 108 ]
child : [4325 ]
child at 0 has 3 kids
child : [21 ]
child : [65 102 ]
child : [108 ]
child at 1 has 2 kids
child : [234 ]
child : [4325 56089 ]
child at 3 is blank right now
after adding the key and sorting: [65 102 106 ]
NumKeys > maxKeys
INITIALIZE-NODE
maxkids: 3
smallLeafKeys: 1
LargeLeafKeys: 2
0
large leaf keys[0] is 102
1
large leaf keys[1] is 106
large: [102 106 ]
STEP-AFTER-SPLIT
original: [65 ]
largenode: [102 106 ]
FIND-PARENT
DETERMINE-WHICH-CHILD-TO-TRAVEL-DOWN
parent: [234 ]
i: 0
returning the child at 0
traveller was found to be: [65 108 ]
need to find a new traveller
DETERMINE-WHICH-CHILD-TO-TRAVEL-DOWN
parent: [65 108 ]
i: 0
i: 1
returning the child at 1
traveller was found to be: [65 ]
returning seeker
too many keys... now updating parent
UPDATE-PARENT
INITIALIZE-NODE
smallToReceive 1
largeToReceive 2
toBeUpdated: [65 102 108 ]
i: 0
largeIndex currently: [108 ]
updateParent - largeIndex after for loop: [108 ]
number being appended is 102STEP-AFTER-SPLIT
original: [65 ]
largenode: [108 ]
FIND-PARENT
DETERMINE-WHICH-CHILD-TO-TRAVEL-DOWN
parent: [234 ]
i: 0
returning the child at 0
traveller was found to be: [65 ]
returning seeker
newNode from stepAfterSplit: [102 234 ]
updatedParent looks like this: [65 ]
Insert(23, 3.55)
INSERT
DETERMINE-LEAF-NODE
determine leaf node, key: 23
seeker: [102 234 ]
keys of seeker2
seeking which child to travel down
DETERMINE-WHICH-CHILD-TO-TRAVEL-DOWN
parent: [102 234 ]
i: 0
returning the child at 0
current seeker: [65 ]
seeker->isLeaf 0
determined which child to travel down
seeking which child to travel down
DETERMINE-WHICH-CHILD-TO-TRAVEL-DOWN
parent: [65 ]
i: 0
returning the child at 0
current seeker: [21 ]
seeker->isLeaf 1
determined which child to travel down
found the leaf node and returning it
need to insert a new node here: 
insert here: [21 ]
PRINT-TREE
root: [102 234 ]
root has 3 kids
child : [65 ]
child : [108 ]
child : [4325 ]
child at 0 has 2 kids
child : [21 ]
child : [65 ]
child at 1 has 2 kids
child : [102 106 ]
child : [108 ]
child at 3 has 2 kids
child : [234 ]
child : [4325 56089 ]
after adding the key and sorting: [21 23 ]
Search(23, 99)
key1: 23key2: 99
Insert(32, 0.02)
INSERT
DETERMINE-LEAF-NODE
determine leaf node, key: 32
seeker: [102 234 ]
keys of seeker2
seeking which child to travel down
DETERMINE-WHICH-CHILD-TO-TRAVEL-DOWN
parent: [102 234 ]
i: 0
returning the child at 0
current seeker: [65 ]
seeker->isLeaf 0
determined which child to travel down
seeking which child to travel down
DETERMINE-WHICH-CHILD-TO-TRAVEL-DOWN
parent: [65 ]
i: 0
returning the child at 0
current seeker: [21 23 ]
seeker->isLeaf 1
determined which child to travel down
found the leaf node and returning it
need to insert a new node here: 
insert here: [21 23 ]
PRINT-TREE
root: [102 234 ]
root has 3 kids
child : [65 ]
child : [108 ]
child : [4325 ]
child at 0 has 2 kids
child : [21 23 ]
child : [65 ]
child at 1 has 2 kids
child : [102 106 ]
child : [108 ]
child at 3 has 2 kids
child : [234 ]
child : [4325 56089 ]
after adding the key and sorting: [21 23 32 ]
NumKeys > maxKeys
INITIALIZE-NODE
maxkids: 3
smallLeafKeys: 1
LargeLeafKeys: 2
0
large leaf keys[0] is 23
1
large leaf keys[1] is 32
large: [23 32 ]
STEP-AFTER-SPLIT
original: [21 ]
largenode: [23 32 ]
FIND-PARENT
DETERMINE-WHICH-CHILD-TO-TRAVEL-DOWN
parent: [102 234 ]
i: 0
returning the child at 0
traveller was found to be: [65 ]
need to find a new traveller
DETERMINE-WHICH-CHILD-TO-TRAVEL-DOWN
parent: [65 ]
i: 0
returning the child at 0
traveller was found to be: [21 ]
returning seeker
newNode from stepAfterSplit: [23 65 ]
Insert(220, 3.55)
INSERT
DETERMINE-LEAF-NODE
determine leaf node, key: 220
seeker: [102 234 ]
keys of seeker2
seeking which child to travel down
DETERMINE-WHICH-CHILD-TO-TRAVEL-DOWN
parent: [102 234 ]
i: 0
i: 1
returning the child at 1
current seeker: [108 ]
seeker->isLeaf 0
determined which child to travel down
seeking which child to travel down
DETERMINE-WHICH-CHILD-TO-TRAVEL-DOWN
parent: [108 ]
i: 0
Returning the child at 1
parent has 2 kids
child : [102 106 ]
child : [108 ]
cchild at 2 is blank right now
current seeker: [108 ]
seeker->isLeaf 1
determined which child to travel down
found the leaf node and returning it
need to insert a new node here: 
insert here: [108 ]
PRINT-TREE
root: [102 234 ]
root has 3 kids
child : [23 65 ]
child : [108 ]
child : [4325 ]
child at 0 has 3 kids
child : [21 ]
child : [23 32 ]
child : [65 ]
child at 1 has 2 kids
child : [102 106 ]
child : [108 ]
child at 3 has 2 kids
child : [234 ]
child : [4325 56089 ]
after adding the key and sorting: [108 220 ]
Search(33)
key: 33
Delete (234)
key: 234
